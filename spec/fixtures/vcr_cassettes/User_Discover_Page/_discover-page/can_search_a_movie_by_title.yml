---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=c5d87ff6f6c9e5b4d80f024fe25ecdf9&query=Django
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.12
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Server:
      - openresty
      X-Memc:
      - HIT
      X-Memc-Key:
      - bd52500e01e1edbff45619b31a6e4f06
      X-Memc-Age:
      - '19371'
      X-Memc-Expires:
      - '4689'
      Date:
      - Fri, 01 Dec 2023 22:37:33 GMT
      Etag:
      - W/"1b90b575e6da304e7239456bf875e82b"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - RefreshHit from cloudfront
      Via:
      - 1.1 6fd49f86f210f7efc9603d6f872dd0cc.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SLC50-C1
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - Y8uMMkzMKDEVpREuYceyRi2qrK4M2-VuXJG2dwz3QUlC5mHrUPJD1w==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 01 Dec 2023 22:37:33 GMT
recorded_with: VCR 6.2.0
