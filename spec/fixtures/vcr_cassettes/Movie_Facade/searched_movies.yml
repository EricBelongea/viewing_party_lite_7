---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=c5d87ff6f6c9e5b4d80f024fe25ecdf9&query=Django
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.12
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 30 Nov 2023 20:37:03 GMT
      Server:
      - openresty
      X-Memc:
      - HIT
      X-Memc-Key:
      - bd52500e01e1edbff45619b31a6e4f06
      X-Memc-Age:
      - '2966'
      X-Memc-Expires:
      - '23535'
      Etag:
      - W/"fe5eca57e8a977805a311c1758d6b856"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 9b5dfa5054d4b87503050003e7571c64.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SLC50-C1
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - cYJkqbrkathTd1g4-y_yX1IYmh5sv0AekmOvjRpL6T5ADjcs9OJoTw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJyZXN1bHRzIjpbeyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvZW1BWEpieUJQY01wTGVLMk9kbGdxSUhPUlQyLmpwZyIsImdlbnJlX2lkcyI6WzI4LDM3XSwiaWQiOjEwNzcyLCJvcmlnaW5hbF9sYW5ndWFnZSI6Iml0Iiwib3JpZ2luYWxfdGl0bGUiOiJEamFuZ28iLCJvdmVydmlldyI6IkEgY29mZmluLWRyYWdnaW5nIGd1bnNsaW5nZXIgYW5kIGEgcHJvc3RpdHV0ZSBiZWNvbWUgZW1icm9pbGVkIGluIGEgYml0dGVyIGZldWQgYmV0d2VlbiBhIG1lcmNpbGVzcyBtYXNrZWQgY2xhbiBhbmQgYSBiYW5kIG9mIE1leGljYW4gcmV2b2x1dGlvbmFyaWVzLiIsInBvcHVsYXJpdHkiOjI0LjEsInBvc3Rlcl9wYXRoIjoiL3ZzNHZpZU5zdFNFZmJnTEZFZWxYWE9QdnI2aC5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTY2LTA0LTA2IiwidGl0bGUiOiJEamFuZ28iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny4yMDgsInZvdGVfY291bnQiOjgyMX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIveHhrZzhaMjZFSHBjclB5eW5zU2FwaWVZMjZ2LmpwZyIsImdlbnJlX2lkcyI6WzE4LDM2LDEwNDAyXSwiaWQiOjQzNjMzNCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJmciIsIm9yaWdpbmFsX3RpdGxlIjoiRGphbmdvIiwib3ZlcnZpZXciOiJUaGUgc3Rvcnkgb2YgRGphbmdvIFJlaW5oYXJkdCwgZmFtb3VzIGd1aXRhcmlzdCBhbmQgY29tcG9zZXIsIGFuZCBoaXMgZmxpZ2h0IGZyb20gR2VybWFuLW9jY3VwaWVkIFBhcmlzIGluIDE5NDMuIiwicG9wdWxhcml0eSI6MTAuNjE5LCJwb3N0ZXJfcGF0aCI6Ii9zblo4QmxpcDNvS1k1VjE5dFdkZWQ0ZW9ZQTAuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxNy0wNC0yNiIsInRpdGxlIjoiRGphbmdvIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuMywidm90ZV9jb3VudCI6MTI1fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbXSwiaWQiOjExMzcyMjcsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkRqYW5nbyIsIm92ZXJ2aWV3IjoiTHVjeSAoQ2hpa2EgSWtlKSBhbmQgaGVyIGJveWZyaWVuZCBkZWNpZGUgdG8gY2hhbmdlIHRoZWlyIGxvY2F0aW9uIGluIG9yZGVyIHRvIG1ha2UgYSBiZXR0ZXIgbGl2aW5nLCB3aGlsZSB0aGV5IHdlcmUgYXdheSB0aGV5IGNhbWUgaW4gY29udGFjdCB3aXRoIGEgdmVyeSBub3RvcmlvdXMgY3JpbWluYWwgYW5kIGhlYXJ0bGVzcyBhc3Nhc3NpbiBEamFuZ28gKEhhbmsgQW51a3UpIHdobyB0YWtlIHRoZW0gaW4gYW5kIG1hZGUgdGhlbSBoaXMgcGFydG5lciBpbiB0aGUgdGhlIHNhbWUgYnVzaW5lc3MuIiwicG9wdWxhcml0eSI6MS4wOSwicG9zdGVyX3BhdGgiOm51bGwsInJlbGVhc2VfZGF0ZSI6IiIsInRpdGxlIjoiRGphbmdvIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAuMCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvNUxibTBncEZEUkFQSVYxQ3RoNmxuOWlMMW91LmpwZyIsImdlbnJlX2lkcyI6WzE4LDM3XSwiaWQiOjY4NzE4LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJEamFuZ28gVW5jaGFpbmVkIiwib3ZlcnZpZXciOiJXaXRoIHRoZSBoZWxwIG9mIGEgR2VybWFuIGJvdW50eSBodW50ZXIsIGEgZnJlZWQgc2xhdmUgc2V0cyBvdXQgdG8gcmVzY3VlIGhpcyB3aWZlIGZyb20gYSBicnV0YWwgTWlzc2lzc2lwcGkgcGxhbnRhdGlvbiBvd25lci4iLCJwb3B1bGFyaXR5Ijo5NC41ODgsInBvc3Rlcl9wYXRoIjoiLzdvV1k4VkRXVzd0aFR6V2gzT0tZUmtXVWxENS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDEyLTEyLTI1IiwidGl0bGUiOiJEamFuZ28gVW5jaGFpbmVkIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjguMTczLCJ2b3RlX2NvdW50IjoyNDkxOX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvZTQ0amVkalFCNmZuTXVvazZkVHB5cVkzM0JBLmpwZyIsImdlbnJlX2lkcyI6WzI4LDM3XSwiaWQiOjU2NTE0LCJvcmlnaW5hbF9sYW5ndWFnZSI6Iml0Iiwib3JpZ2luYWxfdGl0bGUiOiJXIERqYW5nbyEiLCJvdmVydmlldyI6IkRqYW5nbyBpcyBvbiB0aGUgdHJhaWwgb2Ygc29tZSByZW5lZ2FkZSBvdXRsYXdzIHdobyByYXBlZCBhbmQga2lsbGVkIGhpcyB3aWZlLiBFbiByb3V0ZSwgaGUgcmVzY3VlcyBhIGhvcnNlIHRoaWVmIGZyb20gYW4gaW1wcm9tcHR1IGhhbmdpbmcuIEhlIGRpc2NvdmVycyB0aGUgbWFuIGtub3dzIHdobyBjb21taXR0ZWQgdGhlIG11cmRlci4gVGhlIG1lbiB0ZWFtIHVwIGFuZCBoZWFkIHdlc3QgZm9yIHJldmVuZ2UuIiwicG9wdWxhcml0eSI6NS41NDcsInBvc3Rlcl9wYXRoIjoiL2lIcTNjVGlic080bjZYZEx1bkV5bXRmanQ2Ti5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTcxLTA5LTI5IiwidGl0bGUiOiJWaXZhISBEamFuZ28iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny4wODMsInZvdGVfY291bnQiOjQ4fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii90WTF2cVhrb3d2NWRrVjRUZEdldzJtT0c4ZzMuanBnIiwiZ2VucmVfaWRzIjpbMzddLCJpZCI6NzcwNzksIm9yaWdpbmFsX2xhbmd1YWdlIjoiaXQiLCJvcmlnaW5hbF90aXRsZSI6IkRqYW5nbyAyIC0gSWwgZ3JhbmRlIHJpdG9ybm8iLCJvdmVydmlldyI6IkZvcm1lciBndW5maWdodGVyIERqYW5nbyBoYXMgYmVjb21lIGEgbW9uayBhbmQgYWJhbmRvbmVkIGhpcyB2aW9sZW50IGZvcm1lciB3YXlzLiBIaXMgZGF1Z2h0ZXIgaXMga2lkbmFwcGVkIGJ5IHJvZ3VlIEh1bmdhcmlhbiBzb2xkaWVycyB1c2luZyBzbGF2ZSBsYWJvciB0byBydW4gYSBzaWx2ZXIgbWluZS4gRGphbmdvIGNhc3RzIG9mZiBoaXMgaGFiaXQgYW5kIGRpZ3MgdXAgaGlzIG1hY2hpbmUgZ3VuIHRvIHByYWN0aWNlIGEgbGl0dGxlIGxpYmVyYXRpb24gdGhlb2xvZ3kuIiwicG9wdWxhcml0eSI6Ny41MDgsInBvc3Rlcl9wYXRoIjoiLzFya1NldU8yY0djVDNDUTQ3WnhMUkhNY0daOC5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTg3LTEwLTIyIiwidGl0bGUiOiJEamFuZ28gU3RyaWtlcyBBZ2FpbiIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo1LjEsInZvdGVfY291bnQiOjM1fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9hVlRTRm82YjFHMHJnTU56WFdsblpQaU1CbGkuanBnIiwiZ2VucmVfaWRzIjpbMzddLCJpZCI6MTEyNTAzLCJvcmlnaW5hbF9sYW5ndWFnZSI6Iml0Iiwib3JpZ2luYWxfdGl0bGUiOiJEamFuZ28gc3BhcmEgcGVyIHByaW1vIiwib3ZlcnZpZXciOiJEamFuZ28ncyBmYXRoZXIgaXMgZnJhbWVkIGJ5IGhpcyBidXNpbmVzcyBwYXJ0bmVyIENsdXNrZXIgYW5kIHNob3QgYnkgYSBib3VudHkgS2lsbGVyLiBEamFuZ28gaW5oZXJpdHMgaGlzIGZhdGhlcnMgcGFydCBvZiB0aGUgYnVzaW5lc3MgYW5kIGEgc2NvcmUgdG8gc2V0dGxlIHdpdGggQ2x1c2tlci4iLCJwb3B1bGFyaXR5Ijo1LjQyLCJwb3N0ZXJfcGF0aCI6Ii94aUtzak0wSDJFQ3NuQ2pUZERWVVNsSlVzcW8uanBnIiwicmVsZWFzZV9kYXRlIjoiMTk2Ni0xMC0yOCIsInRpdGxlIjoiRGphbmdvIFNob290cyBGaXJzdCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo1LjE1OSwidm90ZV9jb3VudCI6MjJ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3F2MzVYVmp4Q3JIMjhJOWZpTUZhSzVqNnpPSC5qcGciLCJnZW5yZV9pZHMiOlszNywyOF0sImlkIjo0NjQ0Mywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJpdCIsIm9yaWdpbmFsX3RpdGxlIjoiUHJlcGFyYXRpIGxhIGJhcmEhIiwib3ZlcnZpZXciOiJBIG15c3RlcmlvdXMgZ3VuZmlnaHRlciBuYW1lZCBEamFuZ28gaXMgZW1wbG95ZWQgYnkgYSBsb2NhbCBjcm9va2VkIHBvbGl0aWNhbCBib3NzIGFzIGEgaGFuZ21hbiB0byBleGVjdXRlIGlubm9jZW50IGxvY2FscyBmcmFtZWQgYnkgdGhlIGJvc3MsIHdobyB3YW50cyB0aGVpciBsYW5kLiBXaGF0IHRoZSBib3NzIGRvZXNuJ3Qga25vdyBpcyB0aGF0IERqYW5nbyBpc24ndCBoYW5naW5nIHRoZSBtZW4gYXQgYWxsLCBqdXN0IG1ha2luZyBpdCBsb29rIGxpa2UgaGUgaXMsIGFuZCB1c2luZyB0aGUgbWVuIGhlIHNhdmVzIGZyb20gdGhlIGdhbGxvd3MgdG8gYnVpbGQgdXAgaGlzIG93biBcImdhbmdcIiBpbiBvcmRlciB0byB0YWtlIHJldmVuZ2Ugb24gdGhlIGJvc3MsIHdobywgd2l0aCBEamFuZ28ncyBmb3JtZXIgYmVzdCBmcmllbmQsIGNhdXNlZCB0aGUgZGVhdGggb2YgaGlzIHdpZmUgeWVhcnMgYmVmb3JlLiIsInBvcHVsYXJpdHkiOjExLjIwNSwicG9zdGVyX3BhdGgiOiIveWdDb3JqUEd0M01qTGxLanRxY09tVFlGUFkzLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NjgtMDEtMjciLCJ0aXRsZSI6IkRqYW5nbywgUHJlcGFyZSBhIENvZmZpbiIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjI4LCJ2b3RlX2NvdW50Ijo4NH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvc3VGcmFoblJiYURiYWZoQ2c3UWg4aFBaUFhsLmpwZyIsImdlbnJlX2lkcyI6WzM3LDI3XSwiaWQiOjkyMzEyLCJvcmlnaW5hbF9sYW5ndWFnZSI6Iml0Iiwib3JpZ2luYWxfdGl0bGUiOiJEamFuZ28gaWwgYmFzdGFyZG8iLCJvdmVydmlldyI6IkEgVW5pb24gc29sZGllciByZXR1cm5zIGZyb20gdGhlIGRlYWQgdG8gdGFrZSByZXZlbmdlIG9uIHRocmVlIG9mZmljZXJzIHdobyBiZXRyYXllZCBoaXMgdW5pdCBpbiBiYXR0bGUuIiwicG9wdWxhcml0eSI6Ni4zOTEsInBvc3Rlcl9wYXRoIjoiL2d0enlsc09MYVNrTUdaREJpRmI1UEdiclQ5QS5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTY5LTExLTA4IiwidGl0bGUiOiJEamFuZ28gdGhlIEJhc3RhcmQiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NS42LCJ2b3RlX2NvdW50IjozMn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvN2NUMEhmMUY5UnFEZDc4eXlRS3QxSEtjMmdmLmpwZyIsImdlbnJlX2lkcyI6WzM3LDI4XSwiaWQiOjYxOTQzLCJvcmlnaW5hbF9sYW5ndWFnZSI6Iml0Iiwib3JpZ2luYWxfdGl0bGUiOiJTZSBzZWkgdml2byBzcGFyYSIsIm92ZXJ2aWV3IjoiQSBNZXhpY2FuIG91dGxhdyBrbm93biBhcyBcIlRoZSBTdHJhbmdlclwiIGlzIHBhcnQgb2YgYSBiYW5kIG9mIHRoaWV2ZXMgdGhhdCBzdGVhbCBhIGNhcmdvIG9mIGdvbGQgZnJvbSBhIHN0YWdlY29hY2guIEhvd2V2ZXIsIHRoZSBBbWVyaWNhbnMgaW4gdGhlIGJhbmQgYmV0cmF5IGhpbSwgYW5kIHNob290IGFsbCB0aGUgTWV4aWNhbnMuIFRoZSBTdHJhbmdlciBpcyBub3QgY29tcGxldGVseSBkZWFkIHRob3VnaCwgYW5kIGNyYXdscyBoaXMgd2F5IG91dCBvZiBoaXMgc2hhbGxvdyBncmF2ZSwgY29udGludWluZyBoaXMgcHVyc3VpdCBvZiB0aGUgZ29sZCwgYW5kIGV4YWN0aW5nIGEgYmxvb2R5IHZlbmdlYW5jZS4iLCJwb3B1bGFyaXR5Ijo4LjU5OSwicG9zdGVyX3BhdGgiOiIvemppeDhFNnNCY2NGOXhuRXdnQWp6d1o5dmNTLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NjctMDUtMDMiLCJ0aXRsZSI6IkRqYW5nbyBLaWxsLi4uIElmIFlvdSBMaXZlLCBTaG9vdCEiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NS45MzksInZvdGVfY291bnQiOjY2fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9kNUpiMmYwSDBQSmc3bmV2ckpXNDE1aTF2ZjMuanBnIiwiZ2VucmVfaWRzIjpbMzddLCJpZCI6MTI5NTc3LCJvcmlnaW5hbF9sYW5ndWFnZSI6Iml0Iiwib3JpZ2luYWxfdGl0bGUiOiJQb2NoaSBkb2xsYXJpIHBlciBEamFuZ28iLCJvdmVydmlldyI6IkRqYW5nbywgYm91bnR5IGtpbGxlciwgaHVudGVyIGFuZCByZXBlbnRhbnQgYmFuZGl0IHdhbnRzIHRvIHN0YXJ0IGEgbmV3IGxpZmUuIE5vIG1vcmUgYnVsbGV0cyBhbmQgYmxvb2QsIGFmdGVyIHllYXJzIG9mIGtpbGxpbmcgYW5kIGhvcnJvci4gRGphbmdvIHdhbnRzIHRvIHJlcGxhY2UgdGhlIHNoZXJyaWYgYW5kIHJlc3RvcmUgbGF3IGFuZCBvcmRlciB0byBsYXdsZXNzIGxhbmQsIGJ1dCBmYWNlcyB0aGUgaGlzdG9yeSBhbmQgYmxvb2RzaGVkIG9mIGhpcyBvd24gcGFzdC4gSGVscGVkIGJ5IHRoZSBsb3ZlIG9mIHRoZSBkYXVnaHRlciBvZiBhIGJhbmRpdCBEamFuZ28gY2FuIGZpbmFsbHkgYnJpbmcgaGlzIGxpZmUgb2YgdmlvbGVuY2UgdG8gYW5kIGVuZCBhbmQgc3BlbmQgaGlzIGRheXMgaW4gcGVhY2UuLi4gSWYgaGUgY2FuIGxpdmUgdGhhdCBsb25nISIsInBvcHVsYXJpdHkiOjUuNDI5LCJwb3N0ZXJfcGF0aCI6Ii96MUtDWnl0aGVKakJIT1dMZjlqT0NiNFZPbXQuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk2Ni0wOS0wOSIsInRpdGxlIjoiQSBGZXcgRG9sbGFycyBmb3IgRGphbmdvIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjUuMywidm90ZV9jb3VudCI6MTJ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3RrZnExZGZIQmNIemkyMGo4ZkVkbDNSbjk1eC5qcGciLCJnZW5yZV9pZHMiOlszN10sImlkIjoxNDgyODUsIm9yaWdpbmFsX2xhbmd1YWdlIjoiaXQiLCJvcmlnaW5hbF90aXRsZSI6IkRqYW5nbyBzZmlkYSBTYXJ0YW5hIiwib3ZlcnZpZXciOiJEamFuZ28gY29tZXMgdG8gdG93biB0byBkaXNjb3ZlciB0aGF0IGhpcyBicm90aGVyIFN0ZXZlLCBhY2N1c2VkIG9mIHJvYmJpbmcgYSBiYW5rLCBoYXMgYmVlbiBseW5jaGVkLiBEamFuZ28gYmVsaWV2ZXMgdGhlIHJlYWwgY3VscHJpdCBpcyBTYXJ0YW5hIGFuZCBjaGFsbGVuZ2VzIGhpbSB0byBhIGR1ZWwuIEp1c3QgaW4gdGltZSBoZSBkaXNjb3ZlcnMgdGhhdCB0aGUgYXV0aG9yIG9mIHRoZSBjcmltZSBpcyBhbiBpbXBvcnRhbnQgbG9jYWwgZmlndXJlIGFuZCBEamFuZ28gYW5kIFNhcnRhbmEgam9pbiBmb3JjZXMgdG8gcHVuaXNoIGhpbS4iLCJwb3B1bGFyaXR5IjoyLjMwNSwicG9zdGVyX3BhdGgiOiIvOGptSWplVUc4WjRDQ3RjaXprZnJubTRlOVJGLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NzAtMDQtMDMiLCJ0aXRsZSI6IkRqYW5nbyBEZWZpZXMgU2FydGFuYSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo1LjIsInZvdGVfY291bnQiOjl9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3NRVmc2OXBaQ0haOUYwVnpEOUVvWmZzWkp5Yi5qcGciLCJnZW5yZV9pZHMiOlszN10sImlkIjo3OTA5NCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJpdCIsIm9yaWdpbmFsX3RpdGxlIjoiSWwgZmlnbGlvIGRpIERqYW5nbyIsIm92ZXJ2aWV3IjoiVGhlIHNvbiBvZiBEamFuZ28gc2VhcmNoZXMgZm9yIHRoZSBtdXJkZXJlciBvZiBoaXMgZmF0aGVyIGFuZCBpcyB0aGVyZWJ5IGludm9sdmVkIGluIGEgd2FyIGJldHdlZW4gdHdvIGZhY3Rpb25zIGhlYWRlZCBieSBmb3JtZXIgYWNxdWFpbnRhbmNlcyBvZiBoaXMgZmFtb3VzIHBhcmVudC4iLCJwb3B1bGFyaXR5IjoyLjczLCJwb3N0ZXJfcGF0aCI6Ii9uc0lUdFQ5ejhMZm5kd2hLZGZBdkZyVDdhbm4uanBnIiwicmVsZWFzZV9kYXRlIjoiMTk2Ny0wNS0yNiIsInRpdGxlIjoiUmV0dXJuIG9mIERqYW5nbyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjMsInZvdGVfY291bnQiOjZ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzNQUzlObWxQdlJvc0JhVEJmazJtdGNNdkwwTi5qcGciLCJnZW5yZV9pZHMiOlszN10sImlkIjoxNDYwNzksIm9yaWdpbmFsX2xhbmd1YWdlIjoiaXQiLCJvcmlnaW5hbF90aXRsZSI6IkFycml2YW5vIERqYW5nbyBlIFNhcnRhbmEuLi4gw6ggbGEgZmluZSIsIm92ZXJ2aWV3IjoiQSBnYW5nIG9mIHZpY2lvdXMgb3V0bGF3cyBsZWFkIGJ5IHRoZSBjcmF6ZWQgQmxhY2sgQnVydCBLZWxsZXIgYWJkdWN0IEplc3NpY2EgQ29sYnkgYW5kIGRlY2lkZSB0byBmbGVlIHRvIE1leGljby4gU2hyZXdkIGJvdW50eSBodW50ZXIgRGphbmdvIGFuZCBzYWludGx5IHJvdmluZyBndW5zbGluZ2VyIFNhcnRhbmEgam9pbiBmb3JjZXMgdG8gcmVzY3VlIHRoZSBwb29yIGxhc3MgZnJvbSB0aGUgZ2FuZydzIHZpbGUgY2x1dGNoZXMuIiwicG9wdWxhcml0eSI6Ni4xNDIsInBvc3Rlcl9wYXRoIjoiLzZhT1RSS2l3TVBWQjdwVXh6NzJoUzl1cmZOVS5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTcwLTExLTE0IiwidGl0bGUiOiJEamFuZ28gYW5kIFNhcnRhbmEgQXJlIENvbWluZy4uLiBJdCdzIHRoZSBFbmQiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NC41LCJ2b3RlX2NvdW50Ijo5fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii85N2JrMUhIOVp4OWtESjd5NTFyUDgzWmJKZHguanBnIiwiZ2VucmVfaWRzIjpbMzddLCJpZCI6MTUwMDI1LCJvcmlnaW5hbF9sYW5ndWFnZSI6Iml0Iiwib3JpZ2luYWxfdGl0bGUiOiJBbmNoZSBwZXIgRGphbmdvIGxlIGNhcm9nbmUgaGFubm8gdW4gcHJlenpvIiwib3ZlcnZpZXciOiJUaGUgQ29ydGV6IGJyb3RoZXJzIHJvYiBhIGJhbmsgYW5kIGZsZWUgYmV5b25kIHRoZSBNZXhpY2FuIGJvcmRlci4gT24gdGhlaXIgdHJhaWwgYXJlIHZhcmlvdXMgcGVvcGxlLCBlYWNoIGZvciBhIGRpZmZlcmVudCByZWFzb246IFNoZXJpZmYgRnVsdG9uIGlzIHNlbnQgYnkgdGhlIHJvYmJlZCBiYW5rIHRvIHJlY3VwZXJhdGUgdGhlIG1vbmV5OyBEamFuZ28sIGEgaGVhZC1odW50ZXIsIGlzIGFmdGVyIHRoZW0gZm9yIHRoZSByZXdhcmQgbW9uZXk7IFBpY2t3aWNrIGlzIGFmdGVyIGEgc2FkZGxlIHN0b2xlbiBmcm9tIGhpbSBieSB0aGUgQ29ydGV6IGJyb3RoZXJzOyBQZWRybyBhbmQgRG9sb3Jlcywgc2Fsb29uIG93bmVycywgYWxzbyB3b3VsZCBsaWtlIHRvIGhhdmUgdGhlIGxvb3QuIiwicG9wdWxhcml0eSI6Mi44NzksInBvc3Rlcl9wYXRoIjoiL21Ga3AwZTY0RUZpZURJREoyREhtMjRValYzRy5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTcxLTA1LTAzIiwidGl0bGUiOiJEamFuZ28ncyBDdXQgUHJpY2UgQ29ycHNlcyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjozLjAsInZvdGVfY291bnQiOjV9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3dOdHNORnJFOWpvVE1EdmJ1TnpRcDA3cGd0eS5qcGciLCJnZW5yZV9pZHMiOlszN10sImlkIjoxMTUzNTMsIm9yaWdpbmFsX2xhbmd1YWdlIjoiaXQiLCJvcmlnaW5hbF90aXRsZSI6IlF1ZWwgbWFsZWRldHRvIGdpb3JubyBkJ2ludmVybm8uLi4gRGphbmdvIGUgU2FydGFuYSBhbGwndWx0aW1vIHNhbmd1ZSIsIm92ZXJ2aWV3IjoiVGhlIHNtYWxsIGRlc2VydCB0b3duIG9mIEJsYWNrIENpdHkgaXMgaGVsZCBpbiBhIHJlaWduIG9mIHRlcnJvciBieSBhIG5hc3R5IGdhbmcgb2YgY3JpbWluYWxzIGxlYWQgYnkgdGhlIHJ1dGhsZXNzIEJ1ZCBXaWxsZXIuIEVhcm5lc3QsIGJ1dCBpbmV4cGVyaWVuY2VkIFNoZXJpZmYgSmFjayBSb25zb24gYXJyaXZlcyBpbiB0b3duIHRvIGVzdGFibGlzaCBsYXcgYW5kIG9yZGVyLiBNeXN0ZXJpb3VzIGJvdW50eSBodW50ZXIgRGphbmdvIGhlbHBzIFJvbnNvbiBvdXQuIiwicG9wdWxhcml0eSI6NS4xMjMsInBvc3Rlcl9wYXRoIjoiLzZaT1hyYVVtVUFHaHI5VHVXcnpQNHpVTUs5Qi5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTcwLTA2LTEzIiwidGl0bGUiOiJPbmUgRGFtbmVkIERheSBhdCBEYXduLi4uIERqYW5nbyBNZWV0cyBTYXJ0YW5hISIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo1LjU3MSwidm90ZV9jb3VudCI6MTR9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3JlTWVpTHQwYXZlRHJDVG1JOHZxdU9pOTZLbi5qcGciLCJnZW5yZV9pZHMiOlszNywxOCwyOF0sImlkIjoxMDMxNTksIm9yaWdpbmFsX2xhbmd1YWdlIjoiaXQiLCJvcmlnaW5hbF90aXRsZSI6Ik5vbiBhc3BldHRhcmUgRGphbmdvLCBzcGFyYSIsIm92ZXJ2aWV3IjoiRGphbmdvIHJldHVybnMgaG9tZSB0byBmaW5kIG91dCB0aGF0IGhpcyBmYXRoZXIgaGFzIGJlZW4ga2lsbGVkLCBieSBsb2NhbCBiYW5kaXRzLCBpbiBhIGJ1c2luZXNzIGRlYWwgZ29uZSB3cm9uZyAuICBIZSBzd2VhcnMgcmV2ZW5nZSBhbmQgYSBtaXh0dXJlIG9mIGxvbmUgZ3VuIG1lbiwgZ2FuZyBtZW1iZXJzIGFuZCBiYW5kaXRzIGdldCBpbnZvbHZlZCB3aXRoIHRoZSBzZWFyY2ggZm9yIGEgcG91Y2ggb2YgbW9uZXksIG1pc3NpbmcgZnJvbSB0aGUgaWxsLWZhdGVkIGRlYWwuIiwicG9wdWxhcml0eSI6Mi41NiwicG9zdGVyX3BhdGgiOiIvYTQ4VjdMczZyT0xFd3dETWwxdFhzVTUyWW5BLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NjctMTItMDEiLCJ0aXRsZSI6IkRvbid0IFdhaXQsIERqYW5nb+KApiBTaG9vdCEiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NC4wLCJ2b3RlX2NvdW50Ijo2fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbMTA3NTEsMzVdLCJpZCI6OTc1MDgwLCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJPcHRpbWlzbSB3aXRoIERqYW5nbyIsIm92ZXJ2aWV3IjoiRGphbmdvIFVuY2hhaW5lZCB0ZWFjaGVzIFwiT3B0aW1pc21cIiIsInBvcHVsYXJpdHkiOjAuNiwicG9zdGVyX3BhdGgiOm51bGwsInJlbGVhc2VfZGF0ZSI6IjIwMTgtMTEtMDEiLCJ0aXRsZSI6Ik9wdGltaXNtIHdpdGggRGphbmdvIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjEwLjAsInZvdGVfY291bnQiOjF9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzRVSFlpelBaYUowR1hNeHVZTWNpaE5mOGNLNi5qcGciLCJnZW5yZV9pZHMiOlszN10sImlkIjoxNTkyNTIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZXMiLCJvcmlnaW5hbF90aXRsZSI6Ik1lc3Rpem8iLCJvdmVydmlldyI6IkEgaGFsZmJyZWVkIHNlZWtzIHJldmVuZ2UgZm9yIHRoZSBkZWF0aCBvZiBoaXMgc2lzdGVyLCB3aG8ga2lsbHMgaGVyc2VsZiBhZnRlciBiZWluZyByYXBlZCBieSBhbiBvZmZpY2VyIG9mIHRoZSBDYW5hZGlhbiBNb3VudGVkIFBvbGljZS4gSGUgZ2V0cyBpbnZvbHZlZCBpbiB0aGUgaGlzdG9yaWNhbCByZXZvbHQgb2YgaGFsZmJyZWVkcyBhbmQgSW5kaWFucyBsZWQgYnkgTG91aXMgUmllbCBpbiAxODg1IGFnYWluc3QgdGhlIENhbmFkaWFuIGdvdmVybm1lbnQuIiwicG9wdWxhcml0eSI6Mi41ODcsInBvc3Rlcl9wYXRoIjoiL2xNdE9jWFE5NndtdWp3U3NFSG9Eb3dVS1JRbi5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTY2LTAzLTI2IiwidGl0bGUiOiJEamFuZ28gRG9lcyBOb3QgRm9yZ2l2ZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjAsInZvdGVfY291bnQiOjF9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzMyRVdOZ1RJZ2VnaDZDVlNPSGxhb0h5WXh0eC5qcGciLCJnZW5yZV9pZHMiOlszN10sImlkIjoxMTI2MDEsIm9yaWdpbmFsX2xhbmd1YWdlIjoiaXQiLCJvcmlnaW5hbF90aXRsZSI6IkxhIHBpw7kgZ3JhbmRlIHJhcGluYSBkZWwgd2VzdCIsIm92ZXJ2aWV3IjoiQWZ0ZXIgcm9iYmluZyAkNTAwLDAwMCwgdGhlIEphcnJldCBnYW5nIGhpZGVzIGluIGEgc21hbGwgaXNvbGF0ZWQgd2VzdGVybiB0b3duLCB3aGVyZSB0aGV5IGFyZSB3YWl0aW5nIGZvciBhIHNjb3V0IHRvIHRha2UgdGhlbSB0aHJvdWdoIHRoZSBkZXNlcnQgdG8gTWV4aWNvLiBCdXQgdGhlIHVucmVzb2x2ZWQgY29uZmxpY3RzIGJldHdlZW4gSmFycmV0IGFuZCBFbCBTYW50bywgdGhlIGJyYWlucyBvZiB0aGUgYmFuZGl0cywgd2hvIGhhcyBhbHNvIGFuIGV5ZSBvbiBKYXJyZXQncyBnaXJsZnJpZW5kLCBiZWNvbWUgYSBwcm9ibGVtIGFtb25nc3QgdGhlIGJhbmRpdHMuIEFuZCB0aGVyZSBpcyBhbHNvIGFuIHVuZGVyZXN0aW1hdGVkIHNjYWxhd2FnIG5hbWVkIEJpbGx5IFJ1bSBhbmQgaGlzIGZyaWVuZCBNYXJrLCB3aG8gYXJlIHRyeWluZyB0byBoZWxwIHRoZSBjYXB0dXJlZCBjaXRpemVucy4iLCJwb3B1bGFyaXR5IjoyLjI3MywicG9zdGVyX3BhdGgiOiIvNHh3MlZSZjJuUUhTT0Z4Q2NwYlRzT0plVnFaLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NjctMTAtMjgiLCJ0aXRsZSI6IkhhbGxlbHVqYSBmb3IgRGphbmdvIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjUuMCwidm90ZV9jb3VudCI6M31dLCJ0b3RhbF9wYWdlcyI6NiwidG90YWxfcmVzdWx0cyI6MTEyfQ==
  recorded_at: Thu, 30 Nov 2023 20:37:03 GMT
recorded_with: VCR 6.2.0
